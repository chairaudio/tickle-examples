fi = library("filters.lib");
de = library("delays.lib");
ma = library("maths.lib");

      // as we need lots of filters in a row
      // we make use of fausts rewriting rules
      // to line them up recursively
hp_row(1) = fi.highpass(1, 4);
hp_row(n) = fi.highpass(1, 4) : hp_row(n-1);

      // now the dc offset remover
      // is providing two signals:
      // 1. DC as an envelope
      // 2. Clean signal
dc_offset = _ <: (_,_): (_, (hp_row(4))): 
    (_,(_<:(_,_))):
           ((-:fi.lowpass(1, 100) * 25),_);

allp = 
	(((*),_,_ : (((_,_)<:(!,_,_,!)),_) :
	de.fdelay4(ma.SR/10),_)   ~_ ) : (!,_);
	// (_,_,_):((*),_):(-);
