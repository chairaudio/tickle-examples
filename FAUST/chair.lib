fi = library("filters.lib");

<<<<<<< HEAD
      // as we need lots of filters in a row
      // we make use of fausts rewriting rules
      // to line them up recursively
hp_row(1) = fi.highpass(1, 4);
hp_row(n) = fi.highpass(1, 4) : hp_row(n-1);

      // now the dc offset remover
      // is providing two signals:
      // 1. DC as an envelope
      // 2. Clean signal
dc_offset = _ <: (_,_): (_, (hp_row(4))): 
    (_,(_<:(_,_))):
           ((-:fi.lowpass(1, 100) * 25),_);

allp = (_,_,_):((*),_):(-);
=======
hp_row(1) = fi.highpass(1, 4);
hp_row(n) = fi.highpass(1, 4) : hp_row(n-1);
dc_offset = _ <: (_,_): (_, (hp_row(4))): 
    (_,(_<:(_,_))):
    ((-:fi.lowpass(1, 100) * 25),_);
>>>>>>> 64d072da9d1d6d124d24db72b257845123ad82a2
